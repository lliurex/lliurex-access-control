#! /usr/bin/python3
from PySide6.QtWidgets import QApplication
from PySide6.QtQuick import QQuickView
from PySide6.QtCore import QUrl, QObject, Slot, Signal, Property
import os
import sys
import subprocess
import shutil
import pwd
import grp
import gettext
gettext.textdomain('lliurex-access-control')
_= gettext.gettext

class Tunnel(QObject):

	def __init__(self):

		QObject.__init__(self)
		self.clearCache()

	#def __init	

	def clearCache(self):

		clear=False
		user=os.environ["USER"]
		versionFile="/home/%s/.config/lliurex-access-control.conf"%user
		cachePath1="/home/%s/.cache/lliurex-access-control"%user
		cachePath2="/home/%s/.cache/lliurex-access-control-gui.py"%user
		installedVersion=self.getPackageVersion()

		if installedVersion!="":
			if not os.path.exists(versionFile):
				with open(versionFile,'w') as fd:
					fd.write(installedVersion)

				clear=True

			else:
				with open(versionFile,'r') as fd:
					fileVersion=fd.readline()
					fd.close()

				if fileVersion!=installedVersion:
					with open(versionFile,'w') as fd:
						fd.write(installedVersion)
						fd.close()
					clear=True
		else:
			clear=True
		
		if clear:
			if os.path.exists(cachePath1):
				shutil.rmtree(cachePath1)
			if os.path.exists(cachePath2):
				shutil.rmtree(cachePath2)

	#def clearCache

	def getPackageVersion(self):

		packageVersionFile="/var/lib/lliurex-access-control/version"
		pkgVersion=""

		if os.path.exists(packageVersionFile):
			with open(packageVersionFile,'r') as fd:
				pkgVersion=fd.readline()
				fd.close()

		return pkgVersion

	#def getPackageVersion

	def checkFlavour(self):

		cmd='lliurex-version -v'
		p=subprocess.Popen(cmd,shell=True,stdout=subprocess.PIPE)
		result=p.communicate()[0]
		lockFlavour=False

		if type(result) is bytes:
			result=result.decode()
		flavours = [ x.strip() for x in result.split(',') ]	
		
		
		for item in flavours:
			if 'server' in item or 'client' in item:
				lockFlavour=True
				break
							
		return lockFlavour

	#def checkFlavour

	def checkUser(self,user):

		isAdmin=False
		GROUPS=["admins","sudo"]
		gid = pwd.getpwnam(user).pw_gid
		groupsGids = os.getgrouplist(user, gid)
		userGroups = [ grp.getgrgid(x).gr_name for x in groupsGids ]

		for item in userGroups:
			if item in GROUPS:
				isAdmin=True
				break

		if not isAdmin:
			if self.checkFlavour():
				return False

		return True

	#def checkUser

	@Slot(str)
	def onTicket(self,ticket):

		user=ticket.split(' ')[2]

		if self.checkUser(user):
			ticket=ticket.replace(' ','##U+0020##')
			os.system("python3 /usr/share/lliurex-access-control/lliurex-access-control-gui.py %s &"%ticket)
		else:
			text=_("You need administration privileges to run this application in this computer.")
			cmd='kdialog --icon lliurex-access-control --title "Lliurex-Access-Control" --passivepopup \
			"%s" 5'%text
			os.system(cmd)
		
		app.quit()
	#def on_ticket
	
#class Tunnel	

app = QApplication([])
app.setDesktopFileName("lliurex-access-control")
tunnel = Tunnel()
view = QQuickView()
view.rootContext().setContextProperty("tunnel", tunnel)
url = QUrl("/usr/share/lliurex-access-control/rsrc/login.qml")
view.setSource(url)
view.show()
ret=app.exec()
del view
del app
sys.exit(ret)
